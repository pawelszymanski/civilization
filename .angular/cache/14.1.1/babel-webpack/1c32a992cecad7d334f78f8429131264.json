{"ast":null,"code":"import { WorldBuilderToolId } from '../models/world-builder';\nimport { TerrainBaseId, TerrainFeatureId, TerrainImprovementId, TerrainResourceId } from '../models/terrain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../stores/map.store\";\nimport * as i2 from \"../stores/world-builder-ui.store\";\nimport * as i3 from \"../stores/world-builder-hovered-tiles.store\";\nexport let WorldBuilderService = /*#__PURE__*/(() => {\n  class WorldBuilderService {\n    constructor(mapStore, worldBuilderUiStore, worldBuilderHoveredTilesStore) {\n      this.mapStore = mapStore;\n      this.worldBuilderUiStore = worldBuilderUiStore;\n      this.worldBuilderHoveredTilesStore = worldBuilderHoveredTilesStore;\n      this.wbHoveredTiles = [];\n      this.subscribeToData();\n    }\n\n    subscribeToData() {\n      this.worldBuilderUiStore.worldBuilderUi.subscribe(worldBuilderUi => this.worldBuilderUi = worldBuilderUi);\n      this.worldBuilderHoveredTilesStore.wbHoveredTiles.subscribe(wbHoveredTiles => this.wbHoveredTiles = wbHoveredTiles);\n    }\n\n    handleTileClick() {\n      switch (this.worldBuilderUi.tool) {\n        case WorldBuilderToolId.TERRAIN_BASE:\n          const baseId = this.worldBuilderUi.terrainBase;\n          this.mapStore.setTilesTerrainBase(this.wbHoveredTiles, baseId);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_FEATURE:\n          const featureId = this.worldBuilderUi.terrainFeature;\n          this.mapStore.setTilesTerrainFeature(this.wbHoveredTiles, featureId);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_RESOURCE:\n          const resourceId = this.worldBuilderUi.terrainResource;\n          this.mapStore.setTilesTerrainResource(this.wbHoveredTiles, resourceId);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_IMPROVEMENT:\n          const improvementId = this.worldBuilderUi.terrainImprovement;\n          this.mapStore.setTilesTerrainImprovement(this.wbHoveredTiles, improvementId);\n          break;\n      }\n    }\n\n    handleTileContextmenu() {\n      switch (this.worldBuilderUi.tool) {\n        case WorldBuilderToolId.TERRAIN_BASE:\n          this.mapStore.setTilesTerrainBase(this.wbHoveredTiles, TerrainBaseId.OCEAN);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_FEATURE:\n          this.mapStore.setTilesTerrainFeature(this.wbHoveredTiles, TerrainFeatureId.NONE);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_RESOURCE:\n          this.mapStore.setTilesTerrainResource(this.wbHoveredTiles, TerrainResourceId.NONE);\n          break;\n\n        case WorldBuilderToolId.TERRAIN_IMPROVEMENT:\n          this.mapStore.setTilesTerrainImprovement(this.wbHoveredTiles, TerrainImprovementId.NONE);\n          break;\n      }\n    }\n\n  }\n\n  WorldBuilderService.ɵfac = function WorldBuilderService_Factory(t) {\n    return new (t || WorldBuilderService)(i0.ɵɵinject(i1.MapStore), i0.ɵɵinject(i2.WorldBuilderUiStore), i0.ɵɵinject(i3.WorldBuilderHoveredTilesStore));\n  };\n\n  WorldBuilderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorldBuilderService,\n    factory: WorldBuilderService.ɵfac,\n    providedIn: 'root'\n  });\n  return WorldBuilderService;\n})();","map":null,"metadata":{},"sourceType":"module"}