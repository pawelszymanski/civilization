{"ast":null,"code":"import { KEY_MODIFIER_ALT, KEY_MODIFIER_CTRL, KEY_MODIFIER_NONE, KEY_MODIFIER_SHIFT } from '../consts/key-bindings.const';\nimport * as i0 from \"@angular/core\";\nexport let KeyboardService = /*#__PURE__*/(() => {\n  class KeyboardService {\n    keyBindingFromEvent(event) {\n      const keyCode = event.code;\n      let modifiers = KEY_MODIFIER_NONE;\n\n      if (event.shiftKey) {\n        modifiers += KEY_MODIFIER_SHIFT;\n      }\n\n      if (event.ctrlKey) {\n        modifiers += KEY_MODIFIER_CTRL;\n      }\n\n      if (event.altKey) {\n        modifiers += KEY_MODIFIER_ALT;\n      }\n\n      return {\n        keyCode,\n        modifiers\n      };\n    }\n\n    findMatchingActionId(keyBindings, keyBinding) {\n      const userActionIds = Object.keys(keyBindings).map(id => id);\n\n      for (const userActionId of userActionIds) {\n        const actionKeyBinding = keyBindings[userActionId];\n\n        if (actionKeyBinding.keyCode === keyBinding.keyCode && actionKeyBinding.modifiers === keyBinding.modifiers) {\n          return Number(userActionId);\n        }\n      }\n    }\n\n  }\n\n  KeyboardService.ɵfac = function KeyboardService_Factory(t) {\n    return new (t || KeyboardService)();\n  };\n\n  KeyboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: KeyboardService,\n    factory: KeyboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return KeyboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}