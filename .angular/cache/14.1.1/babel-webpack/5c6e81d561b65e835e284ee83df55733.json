{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { DEFAULT_WORLD_BUILDER_UI } from '../consts/world-builder.const';\nimport * as i0 from \"@angular/core\";\nexport let WorldBuilderUiStore = /*#__PURE__*/(() => {\n  class WorldBuilderUiStore {\n    constructor() {\n      // tslint:disable-next-line:variable-name\n      this._worldBuilderUi = new BehaviorSubject(DEFAULT_WORLD_BUILDER_UI);\n      this.worldBuilderUi = this._worldBuilderUi.asObservable();\n    }\n\n    next(worldBuilderUi) {\n      this._worldBuilderUi.next(worldBuilderUi);\n    }\n\n    setTool(tool) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        tool\n      }));\n    }\n\n    setBrushSize(brushSize) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        brushSize\n      }));\n    }\n\n    setTerrainBase(terrainBase) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        terrainBase\n      }));\n    }\n\n    setTerrainFeature(terrainFeature) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        terrainFeature\n      }));\n    }\n\n    setTerrainResource(terrainResource) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        terrainResource\n      }));\n    }\n\n    setTerrainImprovement(terrainImprovement) {\n      this.next(Object.assign(Object.assign({}, this._worldBuilderUi.value), {\n        terrainImprovement\n      }));\n    }\n\n  }\n\n  WorldBuilderUiStore.ɵfac = function WorldBuilderUiStore_Factory(t) {\n    return new (t || WorldBuilderUiStore)();\n  };\n\n  WorldBuilderUiStore.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorldBuilderUiStore,\n    factory: WorldBuilderUiStore.ɵfac\n  });\n  return WorldBuilderUiStore;\n})();","map":null,"metadata":{},"sourceType":"module"}