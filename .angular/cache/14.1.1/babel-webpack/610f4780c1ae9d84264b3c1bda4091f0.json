{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // COMPONENTS\n// general\n\nimport { AppComponent } from './components/app/app.component';\nimport { MainMenuComponent } from './components/main-menu/main-menu.component'; // map\n\nimport { MapComponent } from './components/map/map.component'; // hud\n\nimport { StatusBarComponent } from './components/hud/status-bar/status-bar.component';\nimport { QuickLinksComponent } from './components/hud/quick-links/quick-links.component';\nimport { MiniMapComponent } from './components/hud/mini-map/mini-map.component';\nimport { ScreenCenterMarkerComponent } from './components/hud/screen-center-marker/screen-center-marker.component'; // gameplay modals\n\nimport { CivicTreeComponent } from './components/modals/research/civic-tree/civic-tree.component';\nimport { TechnologyTreeComponent } from './components/modals/research/technology-tree/technology-tree.component'; // menu modals\n\nimport { InGameMenuComponent } from './components/modals/menus/in-game-menu/in-game-menu.component';\nimport { SaveGameComponent } from './components/modals/save-and-load/save-game/save-game.component';\nimport { LoadGameComponent } from './components/modals/save-and-load/load-game/load-game.component';\nimport { SaveDetailsComponent } from './components/modals/save-and-load/save-details/save-details.component';\nimport { GameOptionsMenuComponent } from './components/modals/menus/game-options-menu/game-options-menu.component';\nimport { ExitGameConfirmationComponent } from './components/modals/menus/exit-game-confirmation/exit-game-confirmation.component'; // world builder\n\nimport { WorldBuilderComponent } from './components/sidebars/world-builder/world-builder.component'; // dev-tools\n\nimport { DevToolsComponent } from './components/sidebars/dev-tools/dev-tools.component';\nimport { PerformanceChartComponent } from './components/sidebars/dev-tools/components/performance-chart/performance-chart.component';\nimport { CameraFormComponent } from './components/sidebars/dev-tools/components/camera-form/camera-form.component';\nimport { GenerateMapFormComponent } from './components/sidebars/dev-tools/components/generate-map-form/generate-map-form.component'; // DIRECTIVES\n// SERVICES\n\nimport { CameraService } from './services/camera.service';\nimport { SizeService } from './services/size.service';\nimport { GeneratorService } from './services/generator.service';\nimport { KeyboardService } from './services/keyboard.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { MapGeneratorService } from './services/map-generator.service';\nimport { SaveService } from './services/save.service';\nimport { TileTerrainService } from './services/tile-terrain.service';\nimport { TileUiService } from './services/tile-ui.service';\nimport { TileYieldService } from './services/tile-yield.service';\nimport { ZipService } from './services/zip.service';\nimport { MapCanvasService } from './services/map-canvas.service';\nimport { MapZoomService } from './services/map-zoom.service';\nimport { WorldBuilderService } from './services/world-builder.service'; // STORES\n\nimport { CameraStore } from './stores/camera.store';\nimport { SizeStore } from './stores/size.store';\nimport { KeyBindingsStore } from './stores/key-bindings.store';\nimport { MapStore } from './stores/map.store';\nimport { GameplayUiStore } from './stores/gameplay-ui.store';\nimport { SaveHeadersStore } from './stores/save-headers.store';\nimport { UiStore } from './stores/ui.store';\nimport { WorldBuilderUiStore } from './stores/world-builder-ui.store';\nimport { WorldBuilderHoveredTilesStore } from './stores/world-builder-hovered-tiles.store'; // PIPES\n\nimport { TerrainBaseNamePipe } from './pipes/terrain-base-name.pipe';\nimport { TerrainFeatureNamePipe } from './pipes/terrain-feature-name.pipe';\nimport { TerrainImprovementNamePipe } from './pipes/terrain-improvement-name.pipe';\nimport { TerrainResourceNamePipe } from './pipes/terrain-resource-name.pipe';\nimport { EraNamePipe } from './pipes/era-name.pipe';\nimport { CivicNamePipe } from './pipes/ciciv-name.pipe';\nimport { TechnologyNamePipe } from './pipes/technology-name.pipe';\nimport { TileCssClassesPipe } from './pipes/tile-css-classes.pipe';\nimport { TechnologyTreeEraElemClassPipe } from './pipes/technology-tree-era-elem-class.pipe';\nimport { CivicTreeEraElemClassPipe } from './pipes/civic-tree-era-elem-class.pipe';\nimport { ResearchItemElemClassPipe } from './pipes/research-item-elem-class.pipe';\nimport * as i0 from \"@angular/core\";\nconst COMPONENTS = [// general\nAppComponent, MainMenuComponent, // map\nMapComponent, // hud\nStatusBarComponent, QuickLinksComponent, MiniMapComponent, ScreenCenterMarkerComponent, // gameplay modals\nCivicTreeComponent, TechnologyTreeComponent, // menu modals\nInGameMenuComponent, SaveGameComponent, LoadGameComponent, SaveDetailsComponent, GameOptionsMenuComponent, ExitGameConfirmationComponent, // world builder\nWorldBuilderComponent, // dev-tools\nDevToolsComponent, PerformanceChartComponent, CameraFormComponent, GenerateMapFormComponent];\nconst DIRECTIVES = [];\nconst SERVICES = [CameraService, SizeService, GeneratorService, KeyboardService, LocalStorageService, MapGeneratorService, SaveService, TileTerrainService, TileUiService, TileYieldService, ZipService, MapCanvasService, MapZoomService, WorldBuilderService];\nconst STORES = [CameraStore, SizeStore, KeyBindingsStore, MapStore, GameplayUiStore, SaveHeadersStore, UiStore, WorldBuilderUiStore, WorldBuilderHoveredTilesStore];\nconst PIPES = [TerrainBaseNamePipe, TerrainFeatureNamePipe, TerrainImprovementNamePipe, TerrainResourceNamePipe, EraNamePipe, CivicNamePipe, TechnologyNamePipe, TileCssClassesPipe, TechnologyTreeEraElemClassPipe, CivicTreeEraElemClassPipe, ResearchItemElemClassPipe];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: Window,\n      useValue: window\n    }, ...SERVICES, ...STORES, ...PIPES],\n    imports: [BrowserModule, FormsModule, ReactiveFormsModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}