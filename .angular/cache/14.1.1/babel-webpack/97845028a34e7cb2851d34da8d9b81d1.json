{"ast":null,"code":"import { CAMERA_MIN_ZOOM_LEVEL, CAMERA_MAX_ZOOM_LEVEL, CAMERA_MIN_TILE_SIZE, CAMERA_MAX_TILE_SIZE, CAMERA_TILE_SIZE_STEP } from '../../../../../consts/camera.const';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../stores/camera.store\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"class\", \"camera-form-component\"];\nexport let CameraFormComponent = /*#__PURE__*/(() => {\n  class CameraFormComponent {\n    constructor(cameraStore) {\n      this.cameraStore = cameraStore;\n      this.CAMERA_MIN_ZOOM_LEVEL = CAMERA_MIN_ZOOM_LEVEL;\n      this.CAMERA_MAX_ZOOM_LEVEL = CAMERA_MAX_ZOOM_LEVEL;\n      this.CAMERA_MIN_TILE_SIZE = CAMERA_MIN_TILE_SIZE;\n      this.CAMERA_MAX_TILE_SIZE = CAMERA_MAX_TILE_SIZE;\n      this.CAMERA_TILE_SIZE_STEP = CAMERA_TILE_SIZE_STEP;\n      this.subscriptions = [];\n    }\n\n    ngOnInit() {\n      this.subscribeToData();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeFromData();\n    }\n\n    subscribeToData() {\n      this.subscriptions.push(this.cameraStore.camera.subscribe(camera => this.camera = camera));\n    }\n\n    unsubscribeFromData() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    onZoomLevelChange(zoomLevel) {\n      this.cameraStore.setZoomLevel(zoomLevel);\n    }\n\n    onTileSizeChange(tileSize) {\n      this.cameraStore.setTileSize(tileSize);\n    }\n\n    onTranslateXChange(translateX) {\n      this.cameraStore.setTranslate(Object.assign(Object.assign({}, this.camera.translate), {\n        x: translateX\n      }));\n    }\n\n    onTranslateYChange(translateY) {\n      this.cameraStore.setTranslate(Object.assign(Object.assign({}, this.camera.translate), {\n        y: translateY\n      }));\n    }\n\n    onResetCameraClick() {\n      this.cameraStore.resetAll();\n    }\n\n  }\n\n  CameraFormComponent.ɵfac = function CameraFormComponent_Factory(t) {\n    return new (t || CameraFormComponent)(i0.ɵɵdirectiveInject(i1.CameraStore));\n  };\n\n  CameraFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CameraFormComponent,\n    selectors: [[\"\", 8, \"camera-form-component\"]],\n    attrs: _c0,\n    decls: 27,\n    vars: 13,\n    consts: [[\"type\", \"range\", \"name\", \"zoomLevel\", \"step\", \"1\", 3, \"min\", \"max\", \"ngModel\", \"ngModelChange\"], [\"type\", \"range\", \"name\", \"tileSize\", 3, \"min\", \"max\", \"step\", \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"translateX\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"translateY\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"float-right\", 3, \"click\"]],\n    template: function CameraFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"h3\");\n        i0.ɵɵtext(2, \"Auto zoom (mouse wheel)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4, \"Zoom level: \");\n        i0.ɵɵelementStart(5, \"span\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CameraFormComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.onZoomLevelChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9, \"Manual zoom (override)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Tile size (px): \");\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CameraFormComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.onTileSizeChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"label\");\n        i0.ɵɵtext(16, \"Translate X (px): \");\n        i0.ɵɵelementStart(17, \"span\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CameraFormComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.onTranslateXChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"label\");\n        i0.ɵɵtext(21, \"Translate Y (px): \");\n        i0.ɵɵelementStart(22, \"span\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CameraFormComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.onTranslateYChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function CameraFormComponent_Template_button_click_25_listener() {\n          return ctx.onResetCameraClick();\n        });\n        i0.ɵɵtext(26, \"Reset camera\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.camera.zoomLevel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"min\", ctx.CAMERA_MIN_ZOOM_LEVEL)(\"max\", ctx.CAMERA_MAX_ZOOM_LEVEL)(\"ngModel\", ctx.camera.zoomLevel);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.camera.tileSize);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"min\", ctx.CAMERA_MIN_TILE_SIZE)(\"max\", ctx.CAMERA_MAX_TILE_SIZE)(\"step\", ctx.CAMERA_TILE_SIZE_STEP)(\"ngModel\", ctx.camera.tileSize);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.camera.translate.x);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.camera.translate.x);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.camera.translate.y);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.camera.translate.y);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.RangeValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"form[_ngcontent-%COMP%]{padding:10px;*zoom: 1}form[_ngcontent-%COMP%]:before, form[_ngcontent-%COMP%]:after{content:\\\"\\\";display:table}form[_ngcontent-%COMP%]:after{clear:both}form[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] + form[_ngcontent-%COMP%]{margin-top:20px}form[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:10px;user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none}form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{width:100%;color:#2a2a2a;font-size:16px;user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none}form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:700}form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{width:100%}form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{margin-bottom:10px}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:5px 10px;margin-top:10px;cursor:pointer}form[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]{cursor:not-allowed}\"]\n  });\n  return CameraFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}