{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { SaveSortOrderId } from '../../../../models/saves';\nimport { ModalId, ScreenId } from '../../../../models/ui';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/generator.service\";\nimport * as i2 from \"../../../../services/save.service\";\nimport * as i3 from \"../../../../stores/camera.store\";\nimport * as i4 from \"../../../../stores/map.store\";\nimport * as i5 from \"../../../../stores/gameplay-ui.store\";\nimport * as i6 from \"../../../../stores/save-headers.store\";\nimport * as i7 from \"../../../../stores/ui.store\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../save-details/save-details.component\";\nconst _c0 = [\"class\", \"load-game-component\"];\n\nfunction LoadGameComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function LoadGameComponent_li_16_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const save_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSaveHeaderClick(save_r1.uuid));\n    })(\"dblclick\", function LoadGameComponent_li_16_Template_li_dblclick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSaveHeaderDblClick());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const save_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r0.isSaveGameHeaderSelected(save_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(save_r1.name);\n  }\n}\n\nexport let LoadGameComponent = /*#__PURE__*/(() => {\n  class LoadGameComponent {\n    constructor(generatorService, saveService, cameraStore, mapStore, gameplayUiStore, saveHeadersStore, uiStore) {\n      this.generatorService = generatorService;\n      this.saveService = saveService;\n      this.cameraStore = cameraStore;\n      this.mapStore = mapStore;\n      this.gameplayUiStore = gameplayUiStore;\n      this.saveHeadersStore = saveHeadersStore;\n      this.uiStore = uiStore;\n      this.SaveSortOrderId = SaveSortOrderId;\n      this.saveHeaders = [];\n      this.filteredAndSortedSaveHeaders = [];\n      this.saveHeaderListOptionsForm = new FormGroup({\n        showAutosaves: new FormControl(false),\n        sortOrder: new FormControl(SaveSortOrderId.NAME_ASCENDING)\n      });\n      this.subscriptions = [];\n    }\n\n    ngOnInit() {\n      this.subscribeToData();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeFromData();\n    }\n\n    subscribeToData() {\n      this.subscriptions.push(this.saveHeadersStore.saveHeaders.subscribe(saveHeaders => {\n        this.saveHeaders = saveHeaders;\n        this.filterAndSortSaveHeaders();\n      }), this.saveHeaderListOptionsForm.valueChanges.subscribe(() => this.filterAndSortSaveHeaders()));\n    }\n\n    unsubscribeFromData() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    deselectSaveHeaderIfFilteredOut() {\n      if (this.selectedSaveUuid && !this.filteredAndSortedSaveHeaders.find(sh => sh.uuid === this.selectedSaveUuid)) {\n        this.selectedSaveUuid = null;\n      }\n    }\n\n    getFilteredAndSortedSaveHeaders() {\n      let result = [...this.saveHeaders];\n      const options = this.saveHeaderListOptionsForm.value;\n\n      if (!options.showAutosaves) {\n        result = result.filter(saveHeader => !saveHeader.isAutosave);\n      }\n\n      if (options.sortOrder === SaveSortOrderId.DATE_ASCENDING) {\n        return result.sort((a, b) => a.timestamp > b.timestamp ? 1 : -1);\n      }\n\n      if (options.sortOrder === SaveSortOrderId.DATE_DESCENDING) {\n        return result.sort((a, b) => a.timestamp < b.timestamp ? 1 : -1);\n      }\n\n      if (options.sortOrder === SaveSortOrderId.NAME_ASCENDING) {\n        return result.sort((a, b) => a.name > b.name ? 1 : -1);\n      }\n\n      if (options.sortOrder === SaveSortOrderId.NAME_DESCENDING) {\n        return result.sort((a, b) => a.name < b.name ? 1 : -1);\n      }\n    }\n\n    filterAndSortSaveHeaders() {\n      this.filteredAndSortedSaveHeaders = this.getFilteredAndSortedSaveHeaders();\n      this.deselectSaveHeaderIfFilteredOut();\n    }\n\n    get selectedSaveHeader() {\n      return this.saveHeaders.find(s => s.uuid === this.selectedSaveUuid);\n    }\n\n    isSaveGameHeaderSelected(saveHeader) {\n      return this.selectedSaveHeader && saveHeader.uuid === this.selectedSaveHeader.uuid;\n    }\n\n    onSaveHeaderClick(uuid) {\n      this.selectedSaveUuid = uuid;\n    }\n\n    onSaveHeaderDblClick() {\n      this.loadSelectedAndUpdateUi();\n    }\n\n    onDeleteClick() {\n      if (!this.selectedSaveHeader) {\n        return;\n      }\n\n      this.saveService.delete(this.selectedSaveUuid);\n      this.selectedSaveUuid = undefined;\n    }\n\n    onLoadGameClick() {\n      if (!this.selectedSaveHeader) {\n        return;\n      }\n\n      this.loadSelectedAndUpdateUi();\n    }\n\n    loadSelectedAndUpdateUi() {\n      this.saveService.load(this.selectedSaveUuid);\n      this.selectedSaveUuid = undefined;\n      this.uiStore.toggleModal(ModalId.LOAD_GAME);\n      this.uiStore.setScreen(ScreenId.GAMEPLAY);\n    }\n\n  }\n\n  LoadGameComponent.ɵfac = function LoadGameComponent_Factory(t) {\n    return new (t || LoadGameComponent)(i0.ɵɵdirectiveInject(i1.GeneratorService), i0.ɵɵdirectiveInject(i2.SaveService), i0.ɵɵdirectiveInject(i3.CameraStore), i0.ɵɵdirectiveInject(i4.MapStore), i0.ɵɵdirectiveInject(i5.GameplayUiStore), i0.ɵɵdirectiveInject(i6.SaveHeadersStore), i0.ɵɵdirectiveInject(i7.UiStore));\n  };\n\n  LoadGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadGameComponent,\n    selectors: [[\"\", 8, \"load-game-component\"]],\n    attrs: _c0,\n    decls: 22,\n    vars: 11,\n    consts: [[\"novalidate\", \"\", 1, \"filters\", 3, \"formGroup\"], [\"for\", \"show-autosaves\"], [\"type\", \"checkbox\", \"id\", \"show-autosaves\", \"formControlName\", \"showAutosaves\"], [\"for\", \"sort-order\"], [\"id\", \"sort-order\", \"formControlName\", \"sortOrder\"], [3, \"value\"], [1, \"save-list\"], [\"class\", \"save-item\", 3, \"active\", \"click\", \"dblclick\", 4, \"ngFor\", \"ngForOf\"], [1, \"delete-button\", 3, \"click\"], [1, \"save-details-component\", 3, \"save\"], [1, \"load-game-button\", 3, \"click\"], [1, \"save-item\", 3, \"click\", \"dblclick\"]],\n    template: function LoadGameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Autosaves\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Sort by\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 4)(7, \"option\", 5);\n        i0.ɵɵtext(8, \"Name asc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Name desc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 5);\n        i0.ɵɵtext(12, \"Date asc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 5);\n        i0.ɵɵtext(14, \"Date desc\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"ul\", 6);\n        i0.ɵɵtemplate(16, LoadGameComponent_li_16_Template, 2, 3, \"li\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵlistener(\"click\", function LoadGameComponent_Template_div_click_17_listener() {\n          return ctx.onDeleteClick();\n        });\n        i0.ɵɵtext(18, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"div\", 10);\n        i0.ɵɵlistener(\"click\", function LoadGameComponent_Template_div_click_20_listener() {\n          return ctx.onLoadGameClick();\n        });\n        i0.ɵɵtext(21, \"Load game\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.saveHeaderListOptionsForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.SaveSortOrderId.NAME_ASCENDING);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.SaveSortOrderId.NAME_DESCENDING);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.SaveSortOrderId.DATE_ASCENDING);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.SaveSortOrderId.DATE_DESCENDING);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredAndSortedSaveHeaders);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"disabled\", !ctx.selectedSaveHeader);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"save\", ctx.selectedSaveHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"disabled\", !ctx.selectedSaveHeader);\n      }\n    },\n    dependencies: [i8.NgForOf, i9.ɵNgNoValidate, i9.NgSelectOption, i9.ɵNgSelectMultipleOption, i9.CheckboxControlValueAccessor, i9.SelectControlValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i10.SaveDetailsComponent],\n    styles: [\".load-game-component{position:absolute;top:10%;left:calc(50% - 300px);z-index:400;width:600px;height:70%;background:#9f9787;display:flex;flex-flow:column wrap}.load-game-component form.filters{width:300px;height:40px}.load-game-component ul.save-list{width:300px;height:calc(100% - 80px)}.load-game-component ul.save-list li.save-item{width:300px;height:40px;color:#fff;font-size:22px;line-height:40px;text-align:center;background:#55534f;user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none;cursor:pointer}.load-game-component ul.save-list li.save-item:hover,.load-game-component ul.save-list li.save-item.active{background:#2e5878}.load-game-component .delete-button{width:300px;height:40px;color:#fff;font-size:22px;line-height:40px;text-align:center;background:darkred;user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none;cursor:pointer}.load-game-component .delete-button.disabled{opacity:.5}.load-game-component .save-details-component{width:300px;height:calc(100% - 40px);background:lightcyan}.load-game-component .load-game-button{width:300px;height:40px;color:#fff;font-size:22px;line-height:40px;text-align:center;background:#2e5878;user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none;-webkit-touch-callout:none;cursor:pointer}.load-game-component .load-game-button.disabled{opacity:.5}\\n\"],\n    encapsulation: 2\n  });\n  return LoadGameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}