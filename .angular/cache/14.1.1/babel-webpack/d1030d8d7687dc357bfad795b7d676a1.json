{"ast":null,"code":"import { TerrainFeatureId, TerrainImprovementId, TerrainResourceId } from '../models/terrain';\nimport { TERRAIN_FEATURE_SET, TERRAIN_IMPROVEMENT_SET, TERRAIN_RESOURCE_SET } from '../consts/terrain.const';\nimport * as i0 from \"@angular/core\";\nexport let TileTerrainService = /*#__PURE__*/(() => {\n  class TileTerrainService {\n    isTileTerrainSuitableForItem(tile, suitableTerrainList) {\n      for (const suitableTerrain of suitableTerrainList) {\n        const isBaseSuitable = suitableTerrain.baseId === undefined || suitableTerrain.baseId === tile.terrain.base.id;\n        const isFeatureSuitable = suitableTerrain.featureId === undefined || suitableTerrain.featureId === tile.terrain.feature.id;\n        const isResourceSuitable = suitableTerrain.resourceId === undefined || suitableTerrain.resourceId === tile.terrain.resourceId;\n\n        if (isBaseSuitable && isFeatureSuitable && isResourceSuitable) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    canFeatureBePutOnTile(featureId, tile) {\n      if (featureId === TerrainFeatureId.NONE) {\n        return true;\n      }\n\n      const suitableTerrainList = TERRAIN_FEATURE_SET[featureId].suitableTerrain;\n      return this.isTileTerrainSuitableForItem(tile, suitableTerrainList);\n    }\n\n    canResourceBePutOnTile(resourceId, tile) {\n      if (resourceId === TerrainResourceId.NONE) {\n        return true;\n      }\n\n      const suitableTerrainList = TERRAIN_RESOURCE_SET[resourceId].suitableTerrain;\n      return this.isTileTerrainSuitableForItem(tile, suitableTerrainList);\n    }\n\n    canImprovementBePutOnTile(improvementId, tile) {\n      if (improvementId === TerrainImprovementId.NONE) {\n        return true;\n      }\n\n      const suitableTerrainList = TERRAIN_IMPROVEMENT_SET[improvementId].suitableTerrain;\n      return this.isTileTerrainSuitableForItem(tile, suitableTerrainList);\n    }\n\n  }\n\n  TileTerrainService.ɵfac = function TileTerrainService_Factory(t) {\n    return new (t || TileTerrainService)();\n  };\n\n  TileTerrainService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TileTerrainService,\n    factory: TileTerrainService.ɵfac,\n    providedIn: 'root'\n  });\n  return TileTerrainService;\n})();","map":null,"metadata":{},"sourceType":"module"}